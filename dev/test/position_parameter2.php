<?php
declare(strict_types=1);

require_once "D:\pmmp\Ovommand\\vendor\autoload.php";

use galaxygames\ovommand\parameter\PositionParameter;
use galaxygames\ovommand\parameter\result\BrokenSyntaxResult;

$parameter = new PositionParameter("t");

$test = 100000;
$test = 1;
$out = $test === 1;

$parameters = [
	["~131318763183~-131873173", "~11232213123213123123213213763172791281631287162317863781.1321368763287812"],
	["~~~"],
	["~~", "~"],
	["^^^a"],
	["~131318763183~-131873173", "~1123221312321312312321321376317a2791281631287162317863781.1321368763287812"],
	["~131318763183~-131873173", "^+11232213123213123123213213763aaa"],
	["~13131", "~+1123221312321312312", "-13132313133"],
	["13131", "+1123221312321312312", "-13132313133"],
	["13131", "+1123221312321312312", "-13132313133", "~12312"],
	["adadad~adadadada~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"],
	["~adadadada~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"],
	["~~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"],
	["~~+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"],
	["~~+133231~asdad adadaadsada"],
	["~~+133231~~13132"],
	["~~+133231               ~~13132"],
	[""],
	[" ", "  "],
];

$tz = 'GMT+7';
$timestamp = time();
try {
	$dt = new DateTime("now", new DateTimeZone($tz));
	$dt->setTimestamp($timestamp);
	echo "Test with $test entries, " . count($parameters) . " inputs, " . $dt->format("h:i d/m/Y T") . "\n\n";
} catch (Exception $e) {
	echo $e->getMessage();
}

foreach ($parameters as $params) {
	echo "\"" . implode(" ", $params) . "\"" . "\n";
	$rate = 0;
	for ($i = 1; $i <= $test; ++$i) {
		$start = microtime(true);
		$result = $parameter->parse($params);
		$end = microtime(true);
		if ($end - $start === 0.0) {
			$i--;
		}
		$rate += $end-$start;
	}
	if ($out && $result instanceof BrokenSyntaxResult) {
		echo var_export($result->getBrokenSyntax()) . "\n";
	}
	echo("Test1: " . sprintf('%0.25f', $rate/$test) . PHP_EOL);
	$rate = 0;
	for ($i = 1; $i <= $test; ++$i) {
		$start = microtime(true);
		$result = $parameter->parse2($params);
		$end = microtime(true);
		if ($end - $start === 0.0) {
			$i--;
		}
		$rate += $end-$start;
	}
	if ($out && $result instanceof BrokenSyntaxResult) {
		echo var_export($result->getBrokenSyntax()) . "\n";
	}
	echo("Test2: " . sprintf('%0.25f', $rate/$test) . PHP_EOL); //NON-VANILLA BUT WORK TOO!
	$rate = 0;
	for ($i = 1; $i <= $test; ++$i) {
		$start = microtime(true);
		$result = $parameter->parse3($params);
		$end = microtime(true);
		if ($end - $start === 0.0) {
			$i--;
		}
		$rate += $end-$start;
	}
	if ($out && $result instanceof BrokenSyntaxResult) {
		echo var_export($result->getBrokenSyntax()) . "\n";
	}
	echo("Test3: " . sprintf('%0.25f', $rate/$test) . PHP_EOL);
	$rate = 0;
	for ($i = 1; $i <= $test; ++$i) {
		$start = microtime(true);
		$result = $parameter->parse4($params);
		$end = microtime(true);
		if ($end - $start === 0.0) {
			$i--;
		}
		$rate += $end-$start;
	}
	if ($out && $result instanceof BrokenSyntaxResult) {
		echo var_export($result->getBrokenSyntax()) . "\n";
	}
	echo("Test4: " . sprintf('%0.25f', $rate/$test) . PHP_EOL); //NON-VANILLA BUT WORK TOO!
	$rate = 0;
	for ($i = 1; $i <= $test; ++$i) {
		$start = microtime(true);
		$result = $parameter->parse5($params);
		$end = microtime(true);
		if ($end - $start === 0.0) {
			$i--;
		}
		$rate += $end-$start;
	}
	if ($out && $result instanceof BrokenSyntaxResult) {
		echo var_export($result->getBrokenSyntax()) . "\n";
	}
	echo("Test5: " . sprintf('%0.25f', $rate/$test) . PHP_EOL);
	echo ("-----------------------------------------------------------------\n");
}
/*
Test with 100000 entries, 18 inputs, 01:35 23/10/2023 GMT+0700

"~131318763183~-131873173 ~11232213123213123123213213763172791281631287162317863781.1321368763287812"
Test1: 0.0000039849567413330080982
Test2: 0.0000037664651870727540831
Test3: 0.0000034388184547424318243
Test4: 0.0000033929872512817383826
Test5: 0.0000029770088195800781835 X
-----------------------------------------------------------------
"~~~"
Test1: 0.0000023755121231079102962
Test2: 0.0000025192832946777342769
Test3: 0.0000023962688446044921485
Test4: 0.0000023891377449035646013
Test5: 0.0000022718477249145506915 X
-----------------------------------------------------------------
"~~ ~"
Test1: 0.0000023755025863647461713
Test2: 0.0000025171661376953125080
Test3: 0.0000023748612403869626841
Test4: 0.0000024403285980224611282
Test5: 0.0000021768617630004884883 X
-----------------------------------------------------------------
"^^^a"
Test1: 0.0000019599676132202150308
Test2: 0.0000021435117721557615542
Test3: 0.0000019505190849304199372 X
Test4: 0.0000020954918861389160416
Test5: 0.0000020371508598327637175
-----------------------------------------------------------------
"~131318763183~-131873173 ~1123221312321312312321321376317a2791281631287162317863781.1321368763287812"
Test1: 0.0000022306489944458005702
Test2: 0.0000025912499427795409060
Test3: 0.0000021374487876892088047 X
Test4: 0.0000024818277359008788569
Test5: 0.0000022848725318908689346
-----------------------------------------------------------------
"~131318763183~-131873173 ^+11232213123213123123213213763aaa"
Test1: 0.0000022341895103454589922
Test2: 0.0000019664025306701661133 X
Test3: 0.0000020457506179809571939
Test4: 0.0000024885725975036620954
Test5: 0.0000021478891372680665431
-----------------------------------------------------------------
"~13131 ~+1123221312321312312 -13132313133"
Test1: 0.0000032977342605590819506
Test2: 0.0000033006691932678224600
Test3: 0.0000031598401069641113413
Test4: 0.0000031395483016967772994
Test5: 0.0000027500486373901366694 X
-----------------------------------------------------------------
"13131 +1123221312321312312 -13132313133"
Test1: 0.0000031726765632629392807
Test2: 0.0000031573176383972165902
Test3: 0.0000028635168075561523761
Test4: 0.0000028407216072082518332
Test5: 0.0000027786421775817870820 X
-----------------------------------------------------------------
"13131 +1123221312321312312 -13132313133 ~12312"
Test1: 0.0000023188543319702148074 X
Test2: 0.0000023244357109069824220
Test3: 0.0000024842381477355958807
Test4: 0.0000025849890708923341513
Test5: 0.0000023452782630920409755
-----------------------------------------------------------------
"adadad~adadadada~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"
Test1: 0.0000024448633193969726969
Test2: 0.0000021649050712585450429 X
Test3: 0.0000024199986457824705864
Test4: 0.0000022295999526977540225
Test5: 0.0000026588010787963868933
-----------------------------------------------------------------
"~adadadada~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"
Test1: 0.0000028628754615783693125
Test2: 0.0000026002430915832518906
Test3: 0.0000026503062248229979447
Test4: 0.0000023327040672302245671 X
Test5: 0.0000026326417922973631816
-----------------------------------------------------------------
"~~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"
Test1: 0.0000024545884132385252972
Test2: 0.0000022073245048522951145 X
Test3: 0.0000025823855400085449732
Test4: 0.0000022343039512634276449
Test5: 0.0000026163005828857423947
-----------------------------------------------------------------
"~~+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"
Test1: 0.0000021864748001098633613
Test2: 0.0000020683193206787109333 X
Test3: 0.0000022413516044616698397
Test4: 0.0000022795128822326658493
Test5: 0.0000023984146118164062923
-----------------------------------------------------------------
"~~+133231~asdad adadaadsada"
Test1: 0.0000023676490783691407098
Test2: 0.0000020985031127929687038 X
Test3: 0.0000021809983253479002745
Test4: 0.0000023150539398193357797
Test5: 0.0000024217772483825682480
-----------------------------------------------------------------
"~~+133231~~13132"
Test1: 0.0000021827793121337888614
Test2: 0.0000024093890190124512178
Test3: 0.0000022006678581237795026
Test4: 0.0000023328089714050290948
Test5: 0.0000020821905136108398683 X
-----------------------------------------------------------------
"~~+133231               ~~13132"
Test1: 0.0000021244430541992188115
Test2: 0.0000020886516571044919769 X
Test3: 0.0000020948863029479981290
Test4: 0.0000023505091667175294324
Test5: 0.0000021133375167846679087
-----------------------------------------------------------------
""
Test1: 0.0000011574840545654297510
Test2: 0.0000010866355895996094698 X
Test3: 0.0000011222887039184571275
Test4: 0.0000011111259460449218984
Test5: 0.0000011519074440002441989
-----------------------------------------------------------------
"    "
Test1: 0.0000011052060127258301764
Test2: 0.0000011513614654541015380
Test3: 0.0000011004066467285157278 X
Test4: 0.0000011203312873840332874
Test5: 0.0000011608242988586426073
-----------------------------------------------------------------
 */
/*
Test with 1 entries, 18 inputs, 01:36 23/10/2023 GMT+0700

"~131318763183~-131873173 ~11232213123213123123213213763172791281631287162317863781.1321368763287812"
Test1: 0.0003569126129150390625000
Test2: 0.0000569820404052734375000
Test3: 0.0000350475311279296875000
Test4: 0.0000460147857666015625000
Test5: 0.0000271797180175781250000
-----------------------------------------------------------------
"~~~"
Test1: 0.0000038146972656250000000
Test2: 0.0000028610229492187500000
Test3: 0.0000021457672119140625000
Test4: 0.0000021457672119140625000
Test5: 0.0000019073486328125000000
-----------------------------------------------------------------
"~~ ~"
Test1: 0.0000021457672119140625000
Test2: 0.0000019073486328125000000
Test3: 0.0000019073486328125000000
Test4: 0.0000019073486328125000000
Test5: 0.0000021457672119140625000
-----------------------------------------------------------------
"^^^a"
'a'
Test1: 0.0000970363616943359375000
'a'
Test2: 0.0000061988830566406250000
'a'
Test3: 0.0000030994415283203125000
'a'
Test4: 0.0000021457672119140625000
'a'
Test5: 0.0000019073486328125000000
-----------------------------------------------------------------
"~131318763183~-131873173 ~1123221312321312312321321376317a2791281631287162317863781.1321368763287812"
'a'
Test1: 0.0000028610229492187500000
'a'
Test2: 0.0000019073486328125000000
'a'
Test3: 0.0000021457672119140625000
'a'
Test4: 0.0000030994415283203125000
'a'
Test5: 0.0000030994415283203125000
-----------------------------------------------------------------
"~131318763183~-131873173 ^+11232213123213123123213213763aaa"
'^+11232213123213123123213213763'
Test1: 0.0000050067901611328125000
'^+11232213123213123123213213763'
Test2: 0.0000019073486328125000000
'^+11232213123213123123213213763'
Test3: 0.0000028610229492187500000
'^+11232213123213123123213213763'
Test4: 0.0000019073486328125000000
'^+11232213123213123123213213763'
Test5: 0.0000030994415283203125000
-----------------------------------------------------------------
"~13131 ~+1123221312321312312 -13132313133"
Test1: 0.0000050067901611328125000
Test2: 0.0000028610229492187500000
Test3: 0.0000028610229492187500000
Test4: 0.0000028610229492187500000
Test5: 0.0000028610229492187500000
-----------------------------------------------------------------
"13131 +1123221312321312312 -13132313133"
Test1: 0.0000028610229492187500000
Test2: 0.0000028610229492187500000
Test3: 0.0000028610229492187500000
Test4: 0.0000028610229492187500000
Test5: 0.0000021457672119140625000
-----------------------------------------------------------------
"13131 +1123221312321312312 -13132313133 ~12312"
'~12312'
Test1: 0.0000040531158447265625000
'~12312'
Test2: 0.0000038146972656250000000
'~12312'
Test3: 0.0000030994415283203125000
'~12312'
Test4: 0.0000019073486328125000000
'~12312'
Test5: 0.0000028610229492187500000
-----------------------------------------------------------------
"adadad~adadadada~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"
'adadad'
Test1: 0.0000040531158447265625000
'adadad'
Test2: 0.0000028610229492187500000
'adadad'
Test3: 0.0000028610229492187500000
'adadad'
Test4: 0.0000030994415283203125000
'adadad'
Test5: 0.0000030994415283203125000
-----------------------------------------------------------------
"~adadadada~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"
'adadadada'
Test1: 0.0000019073486328125000000
'adadadada'
Test2: 0.0000019073486328125000000
'adadadada'
Test3: 0.0000030994415283203125000
'adadadada'
Test4: 0.0000030994415283203125000
'adadadada'
Test5: 0.0000030994415283203125000
-----------------------------------------------------------------
"~~adada adsadadad adad+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"
'adada'
Test1: 0.0000028610229492187500000
'adada adsadadad adad' x non vanilla c:
Test2: 0.0000019073486328125000000
'adada'
Test3: 0.0000021457672119140625000
'adada adsadadad adad' x non vanilla c:
Test4: 0.0000021457672119140625000
'adada'
Test5: 0.0000019073486328125000000
-----------------------------------------------------------------
"~~+133231ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š~asdad adadaadsada"
'ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š'
Test1: 0.0000400543212890625000000
'ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š'
Test2: 0.0000109672546386718750000
'ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š'
Test3: 0.0000081062316894531250000
'ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š'
Test4: 0.0000069141387939453125000
'ğŸ˜¿ğŸ˜¿ğŸ˜¿ğŸ˜­âœ¨ğŸ’€ğŸ˜Š'
Test5: 0.0000071525573730468750000
-----------------------------------------------------------------
"~~+133231~asdad adadaadsada"
'asdad'
Test1: 0.0000030994415283203125000
'asdad adadaadsada'
Test2: 0.0000019073486328125000000
'asdad'
Test3: 0.0000021457672119140625000
'asdad adadaadsada'
Test4: 0.0000021457672119140625000
'asdad'
Test5: 0.0000019073486328125000000
-----------------------------------------------------------------
"~~+133231~~13132"
'~13132'
Test1: 0.0000119209289550781250000
'~13132'
Test2: 0.0000028610229492187500000
'~13132'
Test3: 0.0000019073486328125000000
'~13132'
Test4: 0.0000021457672119140625000
'~13132'
Test5: 0.0000019073486328125000000
-----------------------------------------------------------------
"~~+133231               ~~13132"
'~13132'
Test1: 0.0000021457672119140625000
'~13132'
Test2: 0.0000021457672119140625000
'~13132'
Test3: 0.0000019073486328125000000
'~13132'
Test4: 0.0000021457672119140625000
'~13132'
Test5: 0.0000021457672119140625000
-----------------------------------------------------------------
""
''
Test1: 0.0000019073486328125000000
''
Test2: 0.0000011920928955078125000
''
Test3: 0.0000011920928955078125000
''
Test4: 0.0000009536743164062500000
''
Test5: 0.0000009536743164062500000
-----------------------------------------------------------------
"    "
'    '
Test1: 0.0000019073486328125000000
'    '
Test2: 0.0000009536743164062500000
'    '
Test3: 0.0000009536743164062500000
'    '
Test4: 0.0000009536743164062500000
'    '
Test5: 0.0000009536743164062500000
-----------------------------------------------------------------
 */